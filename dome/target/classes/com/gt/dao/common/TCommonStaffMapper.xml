<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt.dao.common.TCommonStaffMapper">
	<resultMap id="BaseResultMap" type="com.gt.entity.common.TCommonStaff">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="login_name" jdbcType="VARCHAR" property="loginName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
		<result column="gender" jdbcType="INTEGER" property="gender" />
		<result column="shop_id" jdbcType="INTEGER" property="shopId" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="create_person" jdbcType="INTEGER" property="createPerson" />
		<result column="recent_ip" jdbcType="VARCHAR" property="recentIp" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="isdelect" jdbcType="INTEGER" property="isdelect" />
		<result column="positionid" jdbcType="INTEGER" property="positionid" />
		<result column="branid" jdbcType="INTEGER" property="branid" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		id, login_name, password, phone, email, job_number, gender, shop_id,
		status, create_time,
		create_person, recent_ip, remark, name, isdelect, positionid, branid
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		select
		<include refid="Base_Column_List" />
		from t_common_staff
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		delete from t_common_staff
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gt.entity.common.TCommonStaff">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		insert into t_common_staff (id, login_name, password,
		phone, email, job_number,
		gender, shop_id, status,
		create_time, create_person, recent_ip,
		remark, name, isdelect,
		positionid, branid)
		values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR},
		#{gender,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{createTime,jdbcType=VARCHAR}, #{createPerson,jdbcType=INTEGER}, #{recentIp,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{isdelect,jdbcType=INTEGER},
		#{positionid,jdbcType=INTEGER}, #{branid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.gt.entity.common.TCommonStaff">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		insert into t_common_staff
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginName != null">
				login_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="jobNumber != null">
				job_number,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createPerson != null">
				create_person,
			</if>
			<if test="recentIp != null">
				recent_ip,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="isdelect != null">
				isdelect,
			</if>
			<if test="positionid != null">
				positionid,
			</if>
			<if test="branid != null">
				branid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="jobNumber != null">
				#{jobNumber,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="createPerson != null">
				#{createPerson,jdbcType=INTEGER},
			</if>
			<if test="recentIp != null">
				#{recentIp,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="isdelect != null">
				#{isdelect,jdbcType=INTEGER},
			</if>
			<if test="positionid != null">
				#{positionid,jdbcType=INTEGER},
			</if>
			<if test="branid != null">
				#{branid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gt.entity.common.TCommonStaff">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		update t_common_staff
		<set>
			<if test="loginName != null">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="jobNumber != null">
				job_number = #{jobNumber,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="createPerson != null">
				create_person = #{createPerson,jdbcType=INTEGER},
			</if>
			<if test="recentIp != null">
				recent_ip = #{recentIp,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="isdelect != null">
				isdelect = #{isdelect,jdbcType=INTEGER},
			</if>
			<if test="positionid != null">
				positionid = #{positionid,jdbcType=INTEGER},
			</if>
			<if test="branid != null">
				branid = #{branid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gt.entity.common.TCommonStaff">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Feb 20 
			15:08:11 CST 2017. -->
		update t_common_staff
		set login_name = #{loginName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		job_number = #{jobNumber,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=INTEGER},
		shop_id = #{shopId,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=VARCHAR},
		create_person = #{createPerson,jdbcType=INTEGER},
		recent_ip = #{recentIp,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		isdelect = #{isdelect,jdbcType=INTEGER},
		positionid = #{positionid,jdbcType=INTEGER},
		branid = #{branid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="Stafflogin_name" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM
		t_common_staff WHERE login_name=#{login_name,jdbcType=VARCHAR} OR
		phone=#{login_name,jdbcType=VARCHAR} and isdelect=0
	</select>
	<select id="selectStaff" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_common_staff
		where (login_name=#{login_name,jdbcType=VARCHAR}
		and
		password=#{password,jdbcType=VARCHAR}) OR
		(phone=#{login_name,jdbcType=VARCHAR} and
		password=#{password,jdbcType=VARCHAR})
	</select>
	<select id="zimenusListshop" resultType="Map">

		SELECT
		a.id,a.menus_name,a.url FROM (SELECT id,menus_name,url,menus_order
		FROM
		t_man_common_menus WHERE
		menus_pid=(SELECT id FROM
		t_man_common_menus WHERE
		url=#{url,jdbcType=VARCHAR}))a LEFT JOIN
		((SELECT menus_id FROM
		t_man_common_menus_level WHERE
		level=#{level,jdbcType=INTEGER})
		UNION
		ALL (SELECT
		DISTINCT(menus_id)
		FROM t_man_common_menus_role WHERE
		role_id IN
		(SELECT role_id FROM
		t_man_common_user_role WHERE
		bus_user_id=#{bus_user_id,jdbcType=INTEGER})))b ON a.id=b.menus_id
		WHERE b.menus_id is NOT NULL ORDER BY a.menus_order
	</select>
	<select id="menusListStaff" resultType="Map">
		SELECT
		a.id,a.menus_name,a.url FROM (SELECT id,menus_name,url,menus_order
		FROM
		t_man_common_menus WHERE
		menus_pid=(SELECT id FROM
		t_man_common_menus WHERE
		url=#{url,jdbcType=VARCHAR}))a LEFT JOIN
		(SELECT DISTINCT(menus_id) FROM
		t_common_staffrole_menus WHERE role_id
		IN (SELECT a.role_id FROM
		(SELECT role_id,staff_id FROM t_common_staffrole) a LEFT JOIN (SELECT
		id,isdelect FROM t_common_role)b ON a.role_id = b.id WHERE
		a.staff_id=#{staff_id,jdbcType=INTEGER} AND b.isdelect=0))b ON
		a.id=b.menus_id WHERE
		b.menus_id is NOT NULL ORDER BY a.menus_order

	</select>
	<select id="menusListshopOne" resultType="Map">
		SELECT
		a.id,a.menus_name,a.url,b.menus_id FROM
		(SELECT
		id,menus_name,url,menus_order,menus_pid FROM t_man_common_menus WHERE
		menus_pid=0 AND industryid=#{industryid,jdbcType=INTEGER}) a LEFT JOIN
		((SELECT menus_id FROM t_man_common_menus_level WHERE
		level=#{level,jdbcType=INTEGER})
		UNION ALL
		(SELECT DISTINCT(menus_id)
		FROM t_man_common_menus_role WHERE role_id IN
		(SELECT role_id FROM
		t_man_common_user_role WHERE
		bus_user_id=#{bus_user_id,jdbcType=INTEGER}))
		)b ON a.id=b.menus_id
		WHERE b.menus_id is NOT NULL ORDER BY a.menus_order
	</select>
	<select id="menusListStaffOne" resultType="Map">
		SELECT
		a.id,a.menus_name,a.url,b.menus_id FROM
		(SELECT
		id,menus_name,url,menus_order,menus_pid FROM t_man_common_menus WHERE
		menus_pid=0 AND industryid=#{industryid,jdbcType=INTEGER}) a LEFT JOIN
		(SELECT menus_id FROM t_common_staffrole_menus WHERE role_id IN
		(SELECT a.role_id FROM
		(SELECT role_id,staff_id FROM t_common_staffrole) a LEFT JOIN (SELECT
		id,isdelect FROM t_common_role)b ON a.role_id = b.id WHERE
		a.staff_id=#{staff_id,jdbcType=INTEGER} AND b.isdelect=0)
		)b ON
		a.id=b.menus_id WHERE
		b.menus_id is NOT NULL ORDER BY
		a.menus_order
	</select>
	<select id="menusordershop" resultType="Map">
		SELECT
		a.url FROM (SELECT
		id,menus_name,url,menus_order,menus_pid FROM
		t_man_common_menus WHERE
		menus_pid=#{pid,jdbcType=INTEGER})a LEFT JOIN ((SELECT menus_id FROM
		t_man_common_menus_level WHERE level=#{level,jdbcType=INTEGER})
		UNION
		ALL (SELECT
		DISTINCT(menus_id) FROM t_man_common_menus_role WHERE
		role_id IN
		(SELECT role_id FROM t_man_common_user_role WHERE
		bus_user_id=#{bus_user_id,jdbcType=INTEGER})))b ON a.id=b.menus_id
		WHERE b.menus_id is NOT NULL
		ORDER BY a.menus_order limit 0,1
	</select>
	<select id="menusorderstaff" resultType="Map">

		SELECT
		a.url FROM (SELECT
		id,menus_order,url FROM
		t_man_common_menus WHERE
		menus_pid=#{pid,jdbcType=INTEGER})a LEFT
		JOIN (SELECT
		DISTINCT(menus_id) FROM
		t_common_staffrole_menus WHERE role_id IN
		(SELECT a.role_id FROM
		(SELECT role_id,staff_id FROM t_common_staffrole) a LEFT JOIN (SELECT
		id,isdelect FROM t_common_role)b ON a.role_id = b.id WHERE
		b.isdelect=0 AND
		a.staff_id= #{staff_id,jdbcType=INTEGER}))b ON a.id=b.menus_id WHERE
		b.menus_id is
		NOT NULL
		ORDER BY a.menus_order limit 0,1

	</select>

	<select id="getAllStaffByResId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_common_staff
		where shop_id = #{shopId} and status = 0
	</select>

	<select id="shopAdminList" resultType="Map">
		SELECT * FROM bus_user WHERE id IN (SELECT userid FROM
		bus_user_branch_relation WHERE isadmin=0 AND branchid=#{shopId}) OR
		id=(SELECT bus_id FROM t_wx_shop WHERE id=#{shopId})
	</select>
	<select id="menusList" resultType="Map">
		SELECT * FROM
		t_man_common_menus WHERE loginstyle=#{loginuc} AND
		modelstyle=#{modelstyle}
		AND
		(id IN
		(SELECT menus_id FROM
		t_common_staffrole_menus a LEFT JOIN (SELECT
		id,isdelect FROM
		t_common_role) b ON a.role_id=b.id WHERE b.isdelect=0
		AND role_id IN
		(SELECT role_id FROM t_common_staffrole WHERE staff_id=#{staff_id}))
		)
		ORDER BY menus_pid,menus_order
	</select>
	<select id="menusLevelList" resultType="Map">
		SELECT  m.item_key as levelid,m.item_value as levelname from (
		SELECT distinct levelstyle FROM
		t_man_common_menus WHERE loginstyle=#{loginuc} AND
		modelstyle=#{modelstyle}
		AND
		(id IN
		(SELECT menus_id FROM
		t_common_staffrole_menus a LEFT JOIN (SELECT
		id,isdelect FROM
		t_common_role) b ON a.role_id=b.id WHERE b.isdelect=0
		AND role_id IN
		(SELECT role_id FROM t_common_staffrole WHERE staff_id=#{staff_id}))
		)) a LEFT JOIN  (SELECT item_key,item_value FROM t_man_dict_items WHERE dict_id=(SELECT id FROM t_man_dict WHERE dict_type='1193'))m ON a.levelstyle=m.item_key
	</select>
</mapper>